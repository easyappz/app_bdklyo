openapi: 3.0.0
info:
  title: Social Network API
  version: 1.0.0
paths:
  /api/auth/register:
    post:
      summary: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Bad request
  /api/auth/login:
    post:
      summary: Login user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Invalid credentials
  /api/profile:
    get:
      summary: Get user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
    put:
      summary: Update user profile (including photo)
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                photo:
                  type: string
                  format: binary
      responses:
        '200':
          description: Profile updated
        '400':
          description: Bad request
        '401':
          description: Unauthorized
  /api/posts:
    post:
      summary: Create a post
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                text:
                  type: string
                image:
                  type: string
                  format: binary
      responses:
        '201':
          description: Post created
        '400':
          description: Bad request
        '401':
          description: Unauthorized
    get:
      summary: Get posts feed
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of posts
        '401':
          description: Unauthorized
  /api/posts/{id}/like:
    post:
      summary: Like or unlike a post
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Post updated
        '401':
          description: Unauthorized
        '404':
          description: Post not found
  /api/posts/{id}/comment:
    post:
      summary: Comment on a post
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
      responses:
        '200':
          description: Post updated
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Post not found
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
